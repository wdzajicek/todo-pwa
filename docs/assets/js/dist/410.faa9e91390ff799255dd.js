"use strict";(self.webpackChunktodo_pwa=self.webpackChunktodo_pwa||[]).push([[410],{410:function(e,t,n){n.r(t),t.default=function(){const e=document.getElementById("notifications"),t=document.getElementById("clearNotifications");let n;const o=document.getElementById("task-list"),a=document.getElementById("Form"),i=document.getElementById("title"),l=document.getElementById("details"),d=document.getElementById("daySelect"),r=document.getElementById("monthSelect"),s=document.getElementById("yearSelect");e.innerHTML+="<li>App initialised.</li>";const c=window.indexedDB.open("toDoList",4);function u(t){let o=t.target.dataset.task,a=n.transaction(["toDoList"],"readwrite");a.objectStore("toDoList").delete(o),a.oncomplete=function(){t.target.parentNode.parentNode.parentNode.removeChild(t.target.parentNode.parentNode),e.innerHTML+='<li>Task "'+o+'" deleted.</li>'}}function m(){o.innerHTML="",n.transaction("toDoList").objectStore("toDoList").openCursor().onsuccess=function(t){let n=t.target.result;if(n){const e=n.value;let[t,a,i,l,d]=[e.taskTitle,e.details,e.month,e.day,e.year],r=`\n        <div class="card mb-3">\n          <div class="card-header">\n            <h3 class="h3">${t}</h3>\n          </div>\n          <div class="card-body">\n            <h4 class="h4">${l+"/"+i+"/"+d}</h4>\n            <p class="p">${a}</p>\n          </div>\n          <div class="card-footer">\n            <button data-task="${t}" type="button" class="btn delete btn-outline-danger">Delete</button>\n          </div>\n        </div>`;o.insertAdjacentHTML("afterbegin",r),document.querySelector(`[data-task="${t}"]`).addEventListener("click",u),n.continue()}else e.innerHTML+="<li>Entries all displayed.</li>"}}c.onerror=function(t){e.innerHTML+="<li>Error loading database.</li>"},c.onsuccess=function(t){e.innerHTML+="<li>Database initialized.</li>",n=c.result,m()},c.onupgradeneeded=function(t){let n=t.target.result;n.onerror=function(t){e.innerHTML+="<li>Error loading database.</li>"};let o=n.createObjectStore("toDoList",{keyPath:"taskTitle"});o.createIndex("details","details",{unique:!1}),o.createIndex("day","day",{unique:!1}),o.createIndex("month","month",{unique:!1}),o.createIndex("year","year",{unique:!1}),e.innerHTML+="<li>Object store created.</li>"},a.addEventListener("submit",(function(t){t.preventDefault();let o=[{taskTitle:i.value,details:l.value,day:d.value,month:r.value,year:s.value,notified:"no"}],a=n.transaction(["toDoList"],"readwrite");a.oncomplete=function(){e.innerHTML+="<li>Transaction completed: database modification finished.</li>",m()},a.onerror=function(){e.innerHTML+="<li>Transaction not opened due to error: "+a.error+"</li>"};let c=a.objectStore("toDoList");console.log(c.indexNames),console.log(c.keyPath),console.log(c.name),console.log(c.transaction),console.log(c.autoIncrement),c.add(o[0]).onsuccess=function(t){e.innerHTML+="<li>Request successful.</li>";const n=new Date;i.value="",l.value="",d.value=n.getDate(),r.value=n.getMonth()+1,s.value=2022}}),!1),t.addEventListener("click",(t=>e.innerHTML=""))}}}]);