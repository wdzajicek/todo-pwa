"use strict";(self.webpackChunktodo_pwa=self.webpackChunktodo_pwa||[]).push([[410],{410:function(e,t,n){n.r(t),t.default=function(){function e(e){t.childElementCount>7&&(t.innerHTML=""),t.innerHTML+=`<li>${e}</li>`}const t=document.getElementById("notifications"),n=document.getElementById("clearNotifications");let a;const o=document.getElementById("task-list"),i=document.getElementById("Form"),d=document.getElementById("title"),r=document.getElementById("details"),c=document.getElementById("daySelect"),s=document.getElementById("monthSelect"),l=document.getElementById("yearSelect");e("App initialized.");const u=window.indexedDB.open("toDoList",4);function m(t){let n=t.target.dataset.task,o=a.transaction(["toDoList"],"readwrite");o.objectStore("toDoList").delete(n),o.oncomplete=function(){t.target.parentNode.parentNode.parentNode.removeChild(t.target.parentNode.parentNode),e(`Task "${n}" deleted.`)}}function f(){o.innerHTML="",a.transaction("toDoList").objectStore("toDoList").openCursor().onsuccess=function(t){let n=t.target.result;if(n){const e=n.value;let[t,a,i,d,r]=[e.taskTitle,e.details,e.month,e.day,e.year];t=t.replace(/[^a-zA-Z0-9-_ ]/g,"");let c=`\n        <div class="card mb-3">\n          <div class="card-header">\n            <h3 class="h3">${t}</h3>\n          </div>\n          <div class="card-body">\n            <h4 class="h4">${i+"/"+d+"/"+r}</h4>\n            <p class="p">${a}</p>\n          </div>\n          <div class="card-footer">\n            <button data-task="${t}" type="button" class="btn delete btn-outline-danger">Delete</button>\n          </div>\n        </div>`;o.insertAdjacentHTML("afterbegin",c),document.querySelector(`[data-task="${t}"]`).addEventListener("click",m),n.continue()}else e("Entries all displayed.")}}u.onerror=function(t){e("Error loading database.")},u.onsuccess=function(t){e("Database initialized."),a=u.result,f()},u.onupgradeneeded=function(t){let n=t.target.result;n.onerror=function(t){e("Error loading database.")};let a=n.createObjectStore("toDoList",{keyPath:"taskTitle"});a.createIndex("details","details",{unique:!1}),a.createIndex("day","day",{unique:!1}),a.createIndex("month","month",{unique:!1}),a.createIndex("year","year",{unique:!1}),e("Object store created.")},i.addEventListener("submit",(function(t){t.preventDefault();let n=[{taskTitle:d.value,details:r.value,day:c.value,month:s.value,year:l.value,notified:"no"}],o=a.transaction(["toDoList"],"readwrite");o.oncomplete=function(){e("Transaction completed: database modification finished."),f()},o.onerror=function(){e(`Transaction not opened due to error: ${o.error}`)},o.objectStore("toDoList").add(n[0]).onsuccess=function(t){const n=new Date;e("Request successful."),d.value="",r.value="",c.value=n.getDate(),s.value=n.getMonth()+1,l.value=n.getFullYear()}}),!1),n.addEventListener("click",(e=>t.innerHTML=""))}}}]);